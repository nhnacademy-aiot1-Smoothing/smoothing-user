name: CI-CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
# CI        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

# SonarQube
    - name : Run SonarQube
      if: ${{ success() }}
      run : mvn sonar:sonar -Dsonar.projectKey=practice -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.login=${{secrets.SONAR_TOKEN}}

# CD
    - name: upload file
      if: ${{ success() }}
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        source: "target/*.jar"
        target: "~/"
        rm: false

    - name: execute shell script
      if: ${{ success() }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          sudo docker build -t user:latest ./ --build-arg FILE=target/user-0.0.1-SNAPSHOT.jar
          containers=$(sudo docker ps -a | grep user | awk '{print $1}')
          if [ -n "$containers" ]; then
            sudo docker stop $containers
            sudo docker rm $containers
          else
            echo "No containers with 'user' found."
          fi
          sudo docker run -d --name user-service --network=smoothing --restart always user
